name: Check Code

on:
  workflow_call:
    inputs:
      hadolint-dockerfile:
        type: string
        required: false
        default: Dockerfile
      hadolint-ignore:
        type: string
        required: false
        default: ''

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Linting
        run: cargo clippy -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Generate code coverage
        run: |
          cargo tarpaulin --verbose --workspace
    
  docker-lint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint Dockerfile with ignore
        if: ${{ inputs.hadolint-ignore != ''}}
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ inputs.hadolint-dockerfile }}
          ignore: ${{ inputs.hadolint-ignore }}
      - name: Lint Dockerfile
        if: ${{ inputs.hadolint-ignore == ''}}
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ inputs.hadolint-dockerfile }}